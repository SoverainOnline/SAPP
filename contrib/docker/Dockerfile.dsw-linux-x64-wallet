# FROM decenomy/dsw-linux-x64-builder:latest
FROM decenomy/dsw-linux-x64-builder@sha256:5bb85128e715b449aa6b08cddc6c98fddb0569a6ea09e09500ca170e102a609d

# ARG for specifying the number of cores
ARG CPU_CORES=1

# ARG for specifying the coin parameters
ARG TICKER=SAPP
ARG NAME=Sapphire
ARG BASE_NAME=sapphire
ARG TARGET=master

# Makes the QT build deterministic
ENV QT_RCC_SOURCE_DATE_OVERRIDE=1

# Clone the repository
RUN git clone https://github.com/decenomy/$TICKER

# Switch to the repository directory
WORKDIR /$TICKER

# Check out a specific version if needed
RUN git checkout $TARGET

# Run the configuration script
RUN ./autogen.sh && \
    ./configure \
        --prefix=/DSW/depends/x86_64-pc-linux-gnu \
        --disable-debug \
        --disable-bench \
        --disable-tests \
        --disable-man \
        --enable-zmq \
        --enable-static \
        --with-gui \
        --enable-glibc-back-compat \
        LDFLAGS="-static-libstdc++"

# Compile the binaries
RUN make -j$CPU_CORES HOST=x86_64-pc-linux-gnu

# Run Git commands to extract the timestamp
RUN git log -1 --format="%at" | xargs -I{} date -d @{} +%Y%m%d%H%M.%S > /git_timestamp

# Run the cli executable to extract the wallet version
RUN src/${BASE_NAME}-cli --version | head -n1 | awk -F'[ -]' '{ print $5 }' | sed s/v// > /wallet_version

# Create deploy files
RUN mkdir -p deploy/linux-x64
RUN strip -s src/$(echo $BASE_NAME)d src/$(echo $BASE_NAME)-cli src/$(echo $BASE_NAME)-tx src/qt/$(echo $BASE_NAME)-qt
RUN cp src/$(echo $BASE_NAME)d src/$(echo $BASE_NAME)-cli src/$(echo $BASE_NAME)-tx src/qt/$(echo $BASE_NAME)-qt /$TICKER/deploy/linux-x64
RUN find /$TICKER/deploy/linux-x64 -type f -exec touch -t $(cat /git_timestamp) {} +
WORKDIR /$TICKER/deploy/linux-x64
RUN zip -X $TICKER-$(cat /wallet_version)-Linux-x64.zip $(echo $BASE_NAME)d $(echo $BASE_NAME)-cli $(echo $BASE_NAME)-tx $(echo $BASE_NAME)-qt
RUN sha256sum $(echo $BASE_NAME)d >> SHA256SUMS-Linux-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-cli >> SHA256SUMS-Linux-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-tx >> SHA256SUMS-Linux-x64.ASC
RUN sha256sum $(echo $BASE_NAME)-qt >> SHA256SUMS-Linux-x64.ASC
RUN sha256sum $TICKER-$(cat /wallet_version)-Linux-x64.zip >> SHA256SUMS-Linux-x64.ASC

# To compile and build the container execute docker in this way: 
# docker build --progress=plain \
#   --build-arg CPU_CORES=<num_cores> \
#   --build-arg TICKER=<ticker> \
#   --build-arg NAME=<coin_name> \
#   --build-arg BASE_NAME=<base_name> \
#   --build-arg TARGET=<branch|commit|tag> \
#   -f Dockerfile.dsw-linux-x64-wallet .

# To run the container use:
# docker run -it <image_id>

# Set the entry point if you want to interact within the container
ENTRYPOINT ["bash"]
